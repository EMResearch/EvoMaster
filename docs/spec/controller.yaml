openapi: 3.0.3
info:
  title: EvoMaster - OpenAPI 3.0
  description: |-
    Evomaster Client
    The first open-source AI-driven tool for automatically generating system-level test cases (also known as fuzzing) for web/enterprise applications. Currently targeting whitebox and blackbox testing of Web APIs, like REST and GraphQL.
  license:
    name: LGPL (v3) license
    url: https://fsfe.org/activities/gplv3/gplv3.en.html
  version: 1.6.1
externalDocs:
  description: Find out more about Evomaster
  url: https://github.com/EMResearch/EvoMaster
tags:
  - name: base
    description: Basic Features
  - name: extra
    description: Additional Features
paths:
  /infoSUT:
    get:
      tags:
        - base
      summary: get information about the system under test
      description: Info about URL, authentication, output and spec
      operationId: infoSUT
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoSUTResponse'
  /runSUT:
    put:
      tags:
        - base
      summary: start running the system under test
      description: JSON with running info must be provided
      operationId: runSUT
      requestBody:
        description: Config to run the System under Test
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunSUTBody'
        required: true
      responses:
        '204':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /controllerInfo:
    get:
      tags:
        - base
      summary: get information about the controller
      description: Info about controller
      operationId: controllerInfo
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControllerInfo'
  /testResults:
    get:
      tags:
        - base
      summary: get results from tests
      description: Info about Test Executions
      operationId: TestResults
      parameters:
        - name: ids
          in: query
          description: Ids of the tests to be executed
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResults'
  /newSearch:
    post:
      tags:
        - base
      summary: New Search
      description: start a new search
      operationId: newSearch
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
  /newAction:
    put:
      tags:
        - base
      summary: New Search
      description: start a new search
      operationId: newAction
      requestBody:
        description: Input for the new action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewActionBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
  /databaseCommand:
    post:
      tags:
        - extra
      summary: Database
      description: Database Configuration
      operationId: databaseCommand
      responses:
        '500':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
  /extraHeuristics:
    post:
      tags:
        - extra
      summary: Extra Heuristics
      description: Extra Heuristics Configuration
      operationId: extraHeuristics
      responses:
        '500':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'

components:
  schemas:
    Empty:
      type: object
    Error:
      type: object
      properties:
        error:
          type: string
          example: 'No provided JSON payload'
    InfoSUTResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            isSutRunning:
              type: boolean
              example: True
            baseUrlOfSUT:
              type: string
              format: URL
              example: http://swagger.io
            infoForAuthentication:
              type: string
            defaultOutputFormat:
              type: string
            restProblem:
              type: string
              format: URL
              example: http://swagger.io
            unitsInfoDto:
              type: string
    RunSUTBody:
      type: object
      properties:
        run:
          type: boolean
          example: True
        resetState:
          type: boolean
          example: False
    ControllerInfo:
      type: object
      properties:
        data:
          type: object
          properties:
            fullName:
              type: string
            isInstrumentationOn:
              type: boolean
    TestResults:
      type: object
      properties:
        data:
          type: object
          properties:
            targets:
              type: array
              items:
                type: string
            additionalInfoList:
              type: array
              items:
                type: string
            extraHeuristics:
              type: array
              items:
                type: string
    NewActionBody:
      type: object
      properties:
        index:
          type: number
        inputVariables:
          type: array
          items:
            type: string